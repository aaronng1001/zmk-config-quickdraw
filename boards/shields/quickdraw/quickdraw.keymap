/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BKSP |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | ESC  |
            //                    | ctrl| ENTR| lwr |   | rse | SPC | ALT |

            label = "Base";
            bindings = <
&kp ESCAPE  &kp Q  &kp W  &kp F      &kp P      &kp B        &kp J    &kp L      &kp U      &kp Y    &kp SEMI  &kp BSPC
&kp TAB     &kp A  &kp R  &kp S      &kp T      &kp G        &kp M    &kp N      &kp E      &kp I    &kp O     &kp APOS
&kp LSHFT   &kp Z  &kp X  &kp C      &kp D      &kp V        &kp K    &kp H      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                          &kp LCTRL  &kp RET    &mo 1       &mo 2     &kp SPACE  &kp RALT
            >;
        };

        Lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&trans        &trans    &kp UP    &trans     &trans     &trans       &kp N7   &kp N8     &kp N9    &kp N0   &kp HOME  &kp F1
&trans        &kp LEFT  &kp DOWN  &kp RIGHT  &trans     &trans       &kp N4   &kp N5     &kp N6    &trans   &trans    &kp F10
&kp LEFT_ALT  &trans    &trans    &trans     &kp MINUS  &kp PLUS     &kp N1   &kp N2     &kp N3    &kp DOT  &trans    &kp F20
                                  &kp LGUI   &trans     &kp SPACE    &kp RET  &kp RCTRL  &kp RALT
            >;
        };

        Raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &kp EXCL      &kp AT      &kp HASH    &kp DLLR      &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DEL
&trans  &bt BT_CLR    &bt BT_PRV  &bt BT_NXT  &trans        &to 3        &kp UNDER  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans  &out OUT_TOG  &trans      &trans      &trans        &trans       &kp MINUS  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                  &kp LGUI    &kp LEFT_ALT  &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        Game {
            label = "Game";
            bindings = <
&trans  &trans  &trans  &trans  &trans        &trans    &trans  &trans         &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &sl 4     &trans  &trans         &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans        &trans    &trans  &trans         &trans  &trans  &trans  &to 0
                        &trans  &kp LEFT_ALT  &trans    &trans  &kp RIGHT_WIN  &trans
            >;
        };

        Game_++ {
            label = "Game ++";
            bindings = <
&kp N0   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LC(RA(Y))  &kp LC(RA(U))  &kp LC(RA(I))  &kp LC(RA(H))  &kp LC(RA(J))  &kp LC(RA(DEL))
&to 3    &kp L         &kp O         &kp Y         &kp K         &kp G           &kp F5         &trans         &trans         &trans         &trans         &kp LA(F4)
&kp F10  &none         &to 0         &none         &kp NUMBER_6  &kp NUMBER_7    &trans         &trans         &trans         &trans         &trans         &to 0
                                     &kp J         &kp I         &kp M           &trans         &trans         &trans
            >;
        };
    };
};